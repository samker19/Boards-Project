#include <TinyWireM.h>
#include <USI_TWI_Master.h>
#include <Tiny4kOLED.h>
#define address 0x1E

int x, y, z;
int lastHeadingDegrees = -1;
String lastDirection = "";

void setup() {
    TinyWireM.begin();         
    TinyWireM.beginTransmission(address);
    TinyWireM.write(0x02);      
    TinyWireM.write(0x00); 
    TinyWireM.endTransmission();
    oled.begin();
    oled.clear();
    oled.on();
    oled.switchRenderFrame();
}

void loop() {
    TinyWireM.beginTransmission(address);
    TinyWireM.write(0x03); 
    TinyWireM.endTransmission();
    TinyWireM.requestFrom(address, 6); 

    if (TinyWireM.available() >= 6) {
        x = (TinyWireM.read() << 8) | TinyWireM.read(); 
        z = (TinyWireM.read() << 8) | TinyWireM.read();
        y = (TinyWireM.read() << 8) | TinyWireM.read();

        float b = atan2((float)y, (float)x);

        // Add magnetic declination (+3.8° converted to radians)
        float magneticDeclination = 3.8 * (PI / 180); // 3.8° = ~0.06638 radians
        b += magneticDeclination;

        // Normalize b to range [0, 2*PI]
        if (b < 0) b += 2 * PI;
        if (b > 2 * PI) b -= 2 * PI;

        int headingDegrees = b * 180 / M_PI; 

        String direction = (headingDegrees < 30 || headingDegrees > 338) ? "N" :
                           (headingDegrees < 68) ? "NE" :
                           (headingDegrees < 113) ? "E" :
                           (headingDegrees < 158) ? "SE" :
                           (headingDegrees < 203) ? "S" :
                           (headingDegrees < 248) ? "SW" :
                           (headingDegrees < 293) ? "W" : "NW";

        if (headingDegrees != lastHeadingDegrees || direction != lastDirection) {
            oled.clear();
            oled.setCursor(0, 0);
            oled.setFont(FONT8X16);
            oled.print("Dir: ");
            oled.print(direction);
            oled.setCursor(0, 2);
            oled.print("Head: ");
            oled.print(headingDegrees);
            oled.switchFrame();
            lastHeadingDegrees = headingDegrees; 
            lastDirection = direction;
        }
    }

    delay(500);
}
